<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\ecompass.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\ecompass.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Fri May 08 15:15:39 2020
<BR><P>
<H3>Maximum Stack Usage =         40 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
Main &rArr; uart_Init &rArr; __ARM_common_switch8
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[2b]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">NMI_Handler</a><BR>
 <LI><a href="#[3]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">HardFault_Handler</a><BR>
 <LI><a href="#[4]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">SVC_Handler</a><BR>
 <LI><a href="#[5]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">PendSV_Handler</a><BR>
 <LI><a href="#[6]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SysTick_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[16]">ADC0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[17]">CMP0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[20]">DAC0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[7]">DMA0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[8]">DMA1_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[9]">DMA2_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[a]">DMA3_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[29]">DefaultISR</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(.text)
 <LI><a href="#[c]">FTFA_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[3]">HardFault_Handler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[f]">I2C0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[10]">I2C1_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[e]">LLWU_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[23]">LPTMR0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[d]">LVD_LVW_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[22]">MCG_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[28]">Main</a> from ecompassmain.o(i.Main) referenced from startup_mkl25z4.o(.text)
 <LI><a href="#[2]">NMI_Handler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1d]">PIT_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[25]">PORTA_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[26]">PORTD_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[5]">PendSV_Handler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1b]">RTC_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1c]">RTC_Seconds_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[b]">Reserved20_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1e]">Reserved39_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[24]">Reserved45_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[2a]">Reset_Handler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[11]">SPI0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[12]">SPI1_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[4]">SVC_Handler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[6]">SysTick_Handler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[27]">SystemInit</a> from system_mkl25z4.o(i.SystemInit) referenced from startup_mkl25z4.o(.text)
 <LI><a href="#[18]">TPM0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[19]">TPM1_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1a]">TPM2_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[21]">TSI0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[13]">UART0_IRQHandler</a> from uart.o(i.UART0_IRQHandler) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[14]">UART1_IRQHandler</a> from uart.o(i.UART1_IRQHandler) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[15]">UART2_IRQHandler</a> from uart.o(i.UART2_IRQHandler) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1f]">USB0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2a]"></a>Reset_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))

<P><STRONG><a name="[2]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>ADC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>CMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DAC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DMA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>DMA1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>DMA2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DMA3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(.text)
</UL>
<P><STRONG><a name="[c]"></a>FTFA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>LLWU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>LPTMR0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>LVD_LVW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>MCG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>PIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>PORTA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>PORTD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>RTC_Seconds_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>Reserved20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>Reserved39_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>Reserved45_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TPM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TPM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TPM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>TSI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>USB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_mkl25z4.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[3f]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_Init
</UL>

<P><STRONG><a name="[40]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[41]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[42]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[43]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 372 bytes, Stack size 16 bytes, system_mkl25z4.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemCoreClockUpdate &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[27]"></a>SystemInit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_mkl25z4.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(.text)
</UL>
<P><STRONG><a name="[37]"></a>i2c_WriteByte</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, i2c.o(i.i2c_WriteByte))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_WriteRegister
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ReadRegister
</UL>

<P><STRONG><a name="[28]"></a>Main</STRONG> (Thumb, 470 bytes, Stack size 0 bytes, ecompassmain.o(i.Main))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Main &rArr; uart_Init &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_WriteRegister
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ReadRegister
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Init
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_String
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_Put
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(.text)
</UL>
<P><STRONG><a name="[13]"></a>UART0_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, uart.o(i.UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART1_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, uart.o(i.UART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UART2_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, uart.o(i.UART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, uart.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_Init
</UL>

<P><STRONG><a name="[3e]"></a>delay</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, i2c.o(i.delay))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_WriteRegister
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ReadRegister
</UL>

<P><STRONG><a name="[3b]"></a>i2c_DisableAck</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, i2c.o(i.i2c_DisableAck))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ReadRegister
</UL>

<P><STRONG><a name="[3a]"></a>i2c_EnterRxMode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, i2c.o(i.i2c_EnterRxMode))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ReadRegister
</UL>

<P><STRONG><a name="[31]"></a>i2c_Init</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, i2c.o(i.i2c_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = i2c_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[3c]"></a>i2c_ReadByte</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, i2c.o(i.i2c_ReadByte))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ReadRegister
</UL>

<P><STRONG><a name="[34]"></a>i2c_ReadRegister</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, i2c.o(i.i2c_ReadRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = i2c_ReadRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_WriteByte
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Wait
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Stop
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Start
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_RepeatedStart
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ReadByte
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_EnterRxMode
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_DisableAck
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[39]"></a>i2c_RepeatedStart</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, i2c.o(i.i2c_RepeatedStart))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ReadRegister
</UL>

<P><STRONG><a name="[36]"></a>i2c_Start</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, i2c.o(i.i2c_Start))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_WriteRegister
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ReadRegister
</UL>

<P><STRONG><a name="[3d]"></a>i2c_Stop</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, i2c.o(i.i2c_Stop))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_WriteRegister
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ReadRegister
</UL>

<P><STRONG><a name="[38]"></a>i2c_Wait</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, i2c.o(i.i2c_Wait))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_WriteRegister
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ReadRegister
</UL>

<P><STRONG><a name="[33]"></a>i2c_WriteRegister</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, i2c.o(i.i2c_WriteRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = i2c_WriteRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_WriteByte
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Wait
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Stop
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Start
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[2f]"></a>uart_Init</STRONG> (Thumb, 596 bytes, Stack size 32 bytes, uart.o(i.uart_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uart_Init &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[30]"></a>uart_Put</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uart.o(i.uart_Put))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_String
</UL>

<P><STRONG><a name="[32]"></a>uart_String</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, uart.o(i.uart_String))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uart_String
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_Put
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>
<P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
